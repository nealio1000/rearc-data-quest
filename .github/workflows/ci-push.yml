name: CI
on:
  push:
    branches:
      - main

env:
  TF_CLOUD_ORGANIZATION: "neal-terraform-playground"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "rearc-data-quest"
  CONFIG_DIRECTORY: "./"
    
jobs:
  spark-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./rearc-spark
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8
          cache: sbt
      - name: Setup sbt launcher
        uses: sbt/setup-sbt@v1
      - name: Build and Test
        run: sbt +test
  deploy-spark-job:
    runs-on: ubuntu-latest
    needs: spark-test
    steps:
      - name: Build with sbt
        run: sbt clean assembly
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload JAR to S3
        run: aws s3 cp target/scala-2.12/rearc-spark-assembly-0.0.1-SNAPSHOT.jar s3://rearc-quest-artifacts/spark-jars/
  lambdas-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lambdas
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ../requirements.txt
      - name: Build and Test
        run: pytest
  # terraform-deploy:
  #   name: "Terraform Deploy"
  #   runs-on: ubuntu-latest
  #   needs: [deploy-spark-job, lambdas-test]
  #   permissions:
  #     # so GitHub can check out this repo using the default github.token
  #     contents: read
  #     pull-requests: write
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Upload Configuration
  #       uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
  #       id: plan-upload
  #       with:
  #         workspace: ${{ env.TF_WORKSPACE }}
  #         directory: ${{ env.CONFIG_DIRECTORY }}
  #         speculative: true
          
  #     - name: Create Apply Run
  #       uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
  #       id: apply-run
  #       with:
  #         workspace: ${{ env.TF_WORKSPACE }}
  #         configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

  #     - name: Apply
  #       uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
  #       if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
  #       id: apply
  #       with:
  #         run: ${{ steps.apply-run.outputs.run_id }}
  #         comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"